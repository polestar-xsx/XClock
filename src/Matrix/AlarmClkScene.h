#ifndef __ALARM_CLOCK_H__
#define __ALARM_CLOCK_H__

#include "Dot2D/dot2d.h"
#include "../RTC/SD3078.h"
#include "../RTC/AlarmClk.h"
#include "../main.h"

NS_DT_BEGIN

typedef enum
{
	State_AlarmDis = 0,
	State_AlarmSetMin = 1,
	State_AlarmSetHour,
    State_AlarmSetWeek,
}tenAlarmState;

class AlarmClkScene : public Scene
{

protected:
    bool init() override;

public:

    STATIC_CREATE(AlarmClkScene);

};


class AlarmClkLayer : public Layer
{
protected:
	uint8_t u8CurrentAlarm = 0;
	uint8_t u8TotalAlarmNum = 0;
    TextSprite *Hour = nullptr;
    SpriteCanvas *Hourcanvas = nullptr;
    TextSprite *Min = nullptr;
    SpriteCanvas *Mincanvas = nullptr;
	TextSprite *TimePt = nullptr;
	SpriteCanvas *TimePtcanvas = nullptr;
    CanvasSprite *Week = nullptr;
	SpriteCanvas *Weekcanvas = nullptr;
	uint8_t SettingWeekIdx = 0;
    tstAlarmClk AlarmTime;
	tstAlarmClk AlarmTimeSetting;
	tenAlarmState enAlarmState = State_AlarmDis;
public:
	
    STATIC_CREATE(AlarmClkLayer);

    virtual bool initLayer();

    void AlarmUpdate(float dt);

	void BtnClickHandler(int8_t, Event*);

	void BtnDoubleClickHandler(int8_t, Event*);

	void BtnLongPressStartHandler(int8_t, Event*);

	void BtnDuringLongPressHandler(int8_t, Event*);

	void StateDisHandle(int8_t,int8_t);

	void StateSetMinHandle(int8_t,int8_t);

	void StateSetHourHandle(int8_t,int8_t);

	void StateSetWeekHandle(int8_t,int8_t);

	void StateDisShow(void);

	void StateSetMinShow(void);

	void StateSetHourShow(void);

	void StateSetWeekShow(void);

	void DrawWeek(void);

	void AlarmStateMachine(int8_t,int8_t);

};


/*************icon of active AlarmClock,gif*************/
const unsigned char icon_ClockActive[] PROGMEM  = {
	0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x08, 0x00, 0x08, 0x00, 0xA1, 0x01, 0x00, 0x00, 0x00, 0x00, 
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xFF, 0x0B, 0x4E, 0x45, 0x54, 0x53, 
	0x43, 0x41, 0x50, 0x45, 0x32, 0x2E, 0x30, 0x03, 0x01, 0x00, 0x00, 0x00, 0x21, 0xF9, 0x04, 0x05, 
	0x32, 0x00, 0x03, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00, 0x00, 0x02, 0x13, 
	0x04, 0x82, 0x61, 0x07, 0x62, 0xAA, 0x9A, 0x44, 0x46, 0xB8, 0x13, 0x2F, 0x5E, 0x0B, 0xF2, 0x88, 
	0x51, 0x40, 0x01, 0x00, 0x21, 0xF9, 0x04, 0x05, 0x32, 0x00, 0x03, 0x00, 0x2C, 0x00, 0x00, 0x00, 
	0x00, 0x08, 0x00, 0x08, 0x00, 0x00, 0x02, 0x13, 0x04, 0x82, 0x61, 0xB7, 0xAC, 0x2B, 0xCE, 0x03, 
	0x51, 0x1A, 0x81, 0x05, 0x6A, 0x46, 0x4D, 0xD6, 0x25, 0x46, 0x01, 0x00, 0x21, 0xF9, 0x04, 0x05, 
	0x32, 0x00, 0x03, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00, 0x00, 0x02, 0x11, 
	0x04, 0x82, 0x61, 0xB7, 0xAC, 0x2B, 0xCE, 0x03, 0x51, 0x9A, 0x6A, 0xE9, 0x52, 0xAA, 0xCE, 0xF4, 
	0x14, 0x00, 0x21, 0xF9, 0x04, 0x05, 0x32, 0x00, 0x03, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x08, 
	0x00, 0x08, 0x00, 0x00, 0x02, 0x12, 0x04, 0x82, 0x61, 0xB7, 0xAC, 0x2B, 0xCE, 0x03, 0x51, 0x8A, 
	0xBB, 0x50, 0x33, 0x6A, 0x32, 0x9E, 0x18, 0x05, 0x00, 0x3B
};

/*************icon of inactive clock,bmp*************/
const unsigned char icon_ClockInactive[] PROGMEM  = {
	0x42, 0x4D, 0xF6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x28, 0x00, 
	0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x18, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0xC4, 0x0E, 0x00, 0x00, 0xC4, 0x0E, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
	0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

NS_DT_END

#endif //__ALARM_CLOCK_H__